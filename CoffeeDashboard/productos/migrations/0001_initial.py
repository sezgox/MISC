# Generated by Django 5.1.5 on 2025-06-05 20:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bebida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('imagen', models.ImageField(upload_to='productos/')),
                ('descripcion', models.TextField(blank=True)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('disponible', models.BooleanField(default=True)),
                ('tamaño', models.CharField(choices=[('TAZA', 'Taza'), ('LATA', 'Lata 33cl'), ('BOTELLA', 'Botella 50cl')], max_length=10)),
                ('tipo_bebida', models.CharField(choices=[('CAFE', 'Café'), ('REFRESCO', 'Refresco'), ('AGUA', 'Agua')], max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Helado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('imagen', models.ImageField(upload_to='productos/')),
                ('descripcion', models.TextField(blank=True)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('disponible', models.BooleanField(default=True)),
                ('sabor', models.CharField(choices=[('VAINILLA', 'Vainilla'), ('CHOCOLATE', 'Chocolate'), ('FRESA', 'Fresa')], max_length=10)),
                ('tamaño', models.CharField(choices=[('PEQUE', 'Taza pequeña'), ('GRANDE', 'Taza grande'), ('CONO', 'Cono')], max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ingrediente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('es_alergeno', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Pan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('imagen', models.ImageField(upload_to='productos/')),
                ('descripcion', models.TextField(blank=True)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stock', models.PositiveIntegerField(default=0)),
                ('ingredientes', models.ManyToManyField(to='productos.ingrediente')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('imagen', models.ImageField(upload_to='productos/')),
                ('descripcion', models.TextField(blank=True)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('disponible', models.BooleanField(default=True)),
                ('ingredientes', models.ManyToManyField(to='productos.ingrediente')),
                ('pan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='productos.pan')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tostada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('imagen', models.ImageField(upload_to='productos/')),
                ('descripcion', models.TextField(blank=True)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('disponible', models.BooleanField(default=True)),
                ('tipo_tostada', models.CharField(choices=[('TOMATE', 'De tomate'), ('JAMON', 'De jamón'), ('TORTILLA', 'De tortilla')], max_length=10)),
                ('ingredientes', models.ManyToManyField(to='productos.ingrediente')),
                ('pan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='productos.pan')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Combo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('imagen', models.ImageField(upload_to='productos/')),
                ('descripcion', models.TextField(blank=True)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('disponible', models.BooleanField(default=True)),
                ('bebidas', models.ManyToManyField(to='productos.bebida')),
                ('comida', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='productos.comida')),
                ('helado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='productos.helado')),
                ('tostada', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='productos.tostada')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
